Okay, fantastic. Okay guys, so we're ready little technical difficulty here. So for that reason, we have to have the the middle screen, you know to live on the on the laptop for the duration of the class and the two side screens on the pad. You're okay with that.  Alright, so we have not yet left the topic of greedy. But you remember I mentioned last time that for the next couple problems that we want to solve using the greedy method. We're going to need some more advanced data structures and that got us into the discussion of priority choose one way to implement a priority queue we talked about last time was binary heap right now a priority to can be implemented using as well. Just want to mention those options as well. They're not going to spend it out of time on them. But I want you guys to be aware of the other types of heap that are out there that can help you implement a priority to  And then we're going to jump back into greeting. So  the first  work. Well, I should say the second type of sheets that we want to talk about is called the binomial so binomial heaps.  Are constructed using binomial trees the same way that a binary heap is constructed using binary tree's binomial heap or constructed using binomial treat.  So definition of what a binomial tree B2K looks like so it's definition is recursive. So so the binomial tree B20 consist of only one note a binomial tree bisa pakai consists of two binomials trees piece of K - 1 that are linked together. So sad the root of 1 is the leftmost child of the roots of the other show me Sub-Zero is going to be just one piece of one is going to be to be Sub-Zero's one is the left most child of the other piece of shoe you see it's to be someone this is a piece of one. This is a piece of one.  This piece of one is the left most child of the root of this other piece of want this abusive 3, which is two piece of tooth. This is one piece up to this is another be safe too. And this piece of 2 is the leftmost child of the root of the other piece of 2K. So goes up like that. So you see that final meal tree nice, okay.  It has a fixed side. So if you wanted to build a heap that could be of any size.  Using binomial trees. What do you have to do? You have to use a combination of  binomial tree  So here's a is the definition of the binomial heap. So binomial Heats H is is a set of binomial tree. So this is a contract with a fine binary ink being constructed using only a single binary tree. So the binomial keep could consist of a number of binomial tree.  I have the following property each binomial tree in h a bass d.min. Heat property. You guys remember the men he property there the key value for their nose.  Is no larger.  For the men hip is is that no less than the value corresponding to the time?  The other property is that for any non-negative integer K. There's at most one binomial tree in h whose Roots has degree K. So you can't you can't have for example two piece of to sort Ruby Civ 5 in a single binomial Heat.  So here's an example of a binomial minty of size 7.  Aerosol.  in a binomial heap of size 7 you see that you have a decent 0 you have a piece of one and you had a visa to  so  How is 7 represented in binary?  It is 7 in binary is what?  it's a  how many zeros do you have there? And then you have one one and one right?  So you can actually think of the the binary bind up the binomial trees that you do you end up with in a binary binomial live in terms of the the the bits representing the size of of the heap in binary. So for example,  Inapposite that left right most position you have a one so it means that you have a Visa Bureau the second one you have again. I want it means they have a Visa and a certain position you have a one is being said you have a piece of two as well right now. What is the representation of 8?  so 8 in binary is going to look like  That's right. So what does that mean? How many how many binomial trees are you going to have in a binomial heap a size 8?  this one and that would be  ABI Saab  a piece of three remember  piece of three has eight notes exactly eight notes in it.  All right. Now as you can see each one of these binary, I'm sorry. Goodbye. And each one of the binomial trees have the mini property. But if you're trying to find the the smallest element in the Min Heap.  Let's say this is the head of the the heap from this is this is a pointer to to them in heap.  Can you just pick this element?  No, because the minimum elements could be over here or here or hear it could be at one of the roots of the binomial tree. So how long would it take us to to go and search through the split but say you have an element's in the ruthless. How long does it take us to go in search this ruthless and then we have to basically go through the ruthless linearly.  So how long would it take?  if you have any elements in the portal in the binomial, how many routes can you have in the  in the ruthless  how many elements can you have in the route list?  Ann Arbor the each one of these  trees would correspond to one of these bits in a binary representation of the size of the binomial heap. So to represent 10 in binary, how many bits do you need?  you need log and dip so  Then the maximum number of the trees that you would have in the in the ruthless is going to be.  login  Do you like the the light show that we have?  Thank you, Andrew.  Do you need a minute?  Yeah, I'm do.  Yeah, sure.  30 seconds. Andrew says no pressure.  You think we are in a stable 45 seconds?  Okay, we're good.  All right.  Okay, so so let's see.  Alright, so before we leave this.  To find the minimum elements so find men. We just talked about it. It takes a while.  Lol again because this Miss Goody login long, they can be log and trees involved. They have to search the root for Soul Men. The fine men takes login time. Remember to sign in in a binary. He took how long  And it took us a time because you knew exactly where it was. It was sitting position in the array. Okay, so I could actually taste login time worse case now. Let's see how the insert operation is going to work.  So let's say I'm going to insert.  an element with with a t value of 9 into the seat, so  Can I just say well I'm going to add this element 9 in The Roots list. And the rest of it is going to stay the same. Well, no because what you remember one of those constraints one of those properties in a binomial Heap is that you cannot have two piece of cake so you cannot have to be Sbarro's in that you've liked it. So what do you have to do you have to merge them together? So so which one becomes the left of the other if this is this is a Min he  12 becomes the leftmost filed of  9 right and then I'm very happy the seven and the 10 and so forth now, is it better to be someone?  So we have some birds he's too which one becomes the leftmost child.  The one with the root note having a value of 9 G Body of night. So then you 